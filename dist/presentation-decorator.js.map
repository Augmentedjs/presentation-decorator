{"version":3,"sources":["webpack://presentation-decorator/webpack/universalModuleDefinition","webpack://presentation-decorator/webpack/bootstrap","webpack://presentation-decorator/./src/decorator.js","webpack://presentation-decorator/./src/index.js","webpack://presentation-decorator/./src/directive.js","webpack://presentation-decorator/external {\"commonjs\":\"next-core-utilities\",\"commonjs2\":\"next-core-utilities\",\"amd\":\"next-core-utilities\",\"root\":\"next-core-utilities\"}","webpack://presentation-decorator/external {\"commonjs\":\"presentation-mediator\",\"commonjs2\":\"presentation-mediator\",\"amd\":\"presentation-mediator\",\"root\":\"presentation-mediator\"}","webpack://presentation-decorator/external {\"commonjs\":\"presentation-models\",\"commonjs2\":\"presentation-models\",\"amd\":\"presentation-models\",\"root\":\"presentation-models\"}","webpack://presentation-decorator/external {\"commonjs\":\"presentation-dom\",\"commonjs2\":\"presentation-dom\",\"amd\":\"presentation-dom\",\"root\":\"presentation-dom\"}","webpack://presentation-decorator/external {\"commonjs\":\"presentation-widget\",\"commonjs2\":\"presentation-widget\",\"amd\":\"presentation-widget\",\"root\":\"presentation-widget\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_nextCoreUtilities","_presentationMediator","_presentationModels","DECORATOR_ATTRIBUTE_ENUM","CLICK","FUNCTION","STYLE","APPEND_TEMPLATE","PREPEND_TEMPLATE","Colleague","constructor","options","super","events","customEvents","_events","bindingAttribute","_changed","event","currentTarget","getAttribute","val","type","checked","model","set","_func","_click","func","_executeFunctionByName","initialize","init","Model","remove","undelegateEvents","off","stopListening","functionName","context","args","namespaces","split","pop","length","apply","injectTemplate","template","mount","el","isString","qs","document","querySelector","currentHTML","innerHTML","nodeType","nodeName","appendChild","DocumentFragment","Dom","delegateEvents","removeTemplate","onlyContent","selector","firstChild","removeChild","parentNode","console","warn","boundElement","id","syncBoundElement","UIEvent","view","window","bubbles","cancelable","sel","dispatchEvent","syncAllBoundElements","ba","elements","querySelectorAll","addClass","cls","myEl","classList","add","removeClass","bindModelChange","on","syncModelChange","element","_syncData","_syncAllData","e","renderStyle","prependTemplate","appendTemplate","createElement","ee","Presentation","Widget","List","empty","DescriptionList","setValue","attr","attributes","keys","unbindModelChange","unBind","unbindModelSync","DecoratorView","DirectiveView","_decorator","render"],"mappings":"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","file":"presentation-decorator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"next-core-utilities\"), require(\"presentation-mediator\"), require(\"presentation-models\"), require(\"presentation-dom\"), require(\"presentation-widget\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-decorator\", [\"next-core-utilities\", \"presentation-mediator\", \"presentation-models\", \"presentation-dom\", \"presentation-widget\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-decorator\"] = factory(require(\"next-core-utilities\"), require(\"presentation-mediator\"), require(\"presentation-models\"), require(\"presentation-dom\"), require(\"presentation-widget\"));\n\telse\n\t\troot[\"presentation-decorator\"] = factory(root[\"next-core-utilities\"], root[\"presentation-mediator\"], root[\"presentation-models\"], root[\"presentation-dom\"], root[\"presentation-widget\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { isString } from \"next-core-utilities\";\nimport { Colleague } from \"presentation-mediator\";\nimport { Model } from \"presentation-models\";\nimport Dom from \"presentation-dom\";\nimport Widget from \"presentation-widget\";\n\nconst DECORATOR_ATTRIBUTE_ENUM = {\n  \"CLICK\": \"data-click\",\n  \"FUNCTION\": \"data-function\",\n  \"STYLE\": \"data-style\",\n  \"APPEND_TEMPLATE\": \"data-append-template\",\n  \"PREPEND_TEMPLATE\": \"data-prepend-template\"\n};\n\n// TODO: not implimented yet\n//\"appendTemplateEach\": \"data-append-template-each\",\n//\"prependTemplateEach\": \"data-prepend-template-each\"\n\n/**\n * DecoratorView<br/>\n * An MVVM view designed around decorating the DOM with bindings.\n * This concept is designed to decouple the view from the backend contract.\n * Although this is achieved via views in general, the idea is:<br/>\n * <blockquote>As a Javascript Developer, I'd like the ability to decorate HTML and control view rendering without the use of CSS selectors</blockquote>\n * <em>Important to note: This view <strong>gives up</strong> it's template and events!\n * This is because all events and templates are used on the DOM directly.</em><br/>\n * To add custom events, use customEvents instead of 'events'<br/>\n * supported annotations:<br/>\n * <ul>\n * <li>data-click</li>\n * <li>data-function</li>\n * <li>data-style</li>\n * <li>data-append-template</li>\n * <li>data-prepend-template</li>\n * </ul>\n * @memberof Presentation\n * @extends Presentation.Colleague\n */\nclass DecoratorView extends Colleague {\n  constructor(options) {\n    super(options);\n\n    if (options.events) {\n      options.customEvents = options.events;\n    }\n\n    if (options.customEvents) {\n      this.customEvents = options.customEvents;\n    } else {\n      this.customEvents = {};\n    }\n  };\n  /**\n   * Custom Events Property - merge into built-in events\n   * @property customEvents\n   */\n\n  /**\n   * Events Property - Do Not Override\n   * @property events\n   */\n  events() {\n    //console.log(\"calling events\");\n    const _events = (this.customEvents) ? this.customEvents : {};\n    if (this.name) {\n      //console.log(\"calling events - name \" + this.name);\n      _events[`change input[${this.bindingAttribute()}]`] = \"_changed\";\n      _events[`change textarea[${this.bindingAttribute()}]`] = \"_changed\";\n      _events[`change select[${this.bindingAttribute()}]`] = \"_changed\";\n      // regular elements with click bindings\n        //console.log(`click *[${this.bindingAttribute()}][${DECORATOR_ATTRIBUTE_ENUM.CLICK}]`);\n      _events[`click *[${this.bindingAttribute()}][${DECORATOR_ATTRIBUTE_ENUM.CLICK}]`] = \"_click\";\n    }\n    //console.debug(\"final events\", _events);\n    return _events;\n  };\n  _changed(event) {\n    if (event) {\n      let key = event.currentTarget.getAttribute(this.bindingAttribute());\n      let val = event.currentTarget.value;\n      if(event.currentTarget.type === \"checkbox\") {\n        val = (event.currentTarget.checked) ? true : false;\n      }\n      this.model.set(( (key) ? key : event.currentTarget.name ), val);\n      this._func(event);\n      //console.debug(\"AUGMENTED: DecoratorView updated Model: \" + JSON.stringify(this.model.toJSON()));\n    }\n  };\n  _click(event) {\n    if (event) {\n      let func = event.currentTarget.getAttribute(DECORATOR_ATTRIBUTE_ENUM.CLICK);\n      if (func && this[func]) {\n        this._executeFunctionByName(func, this, event);\n      }/* else {\n        //_logger.debug(\"AUGMENTED: DecoratorView No function bound or no function exists! \" + func);\n      }*/\n      this._func(event);\n    }\n  };\n  _func(event) {\n    if (event) {\n      let func = event.currentTarget.getAttribute(DECORATOR_ATTRIBUTE_ENUM.FUNCTION);\n      if (func && this[func]) {\n        this._executeFunctionByName(func, this, event);\n      } /*else {\n        //_logger.debug(\"AUGMENTED: DecoratorView No function bound or no function exists! \" + func);\n      }*/\n    }\n  };\n  /**\n   * Initialize method - Do Not Override\n   */\n  initialize(options) {\n    this.init(options);\n\n    if (!this.model) {\n      this.model = new Model();\n    }\n  };\n  /**\n   * Remove method - Does not remove DOM elements only bindings.\n   */\n  remove() {\n    /* off to unbind the events */\n    this.undelegateEvents();\n    this.off();\n    this.stopListening();\n    return this;\n  };\n  /**\n   * _executeFunctionByName method - Private\n   * @private\n   */\n  _executeFunctionByName(functionName, context, ...args /*, args */) {\n    //let args = Array.prototype.slice.call(arguments, 2);\n    const namespaces = functionName.split(\".\");\n    const func = namespaces.pop();\n    if (namespaces && func) {\n      let i = 0;\n      const l = namespaces.length;\n      for (i = 0; i < l; i++) {\n        context = context[namespaces[i]];\n      }\n      return context[func].apply(context, args);\n    }\n    return null;\n    //return Augmented.exec(arguments);\n  };\n  /**\n   * bindingAttribute method - Returns the binging data attribute name\n   * @returns {string} Binding attribute name\n   */\n  bindingAttribute() {\n    return \"data-\" + this.name;\n  };\n  /**\n   * injectTemplate method - Injects a template at a mount point\n   * @param {string} template The template to inject\n   * @param {Element} mount The mount point as Document.Element or String\n   */\n  injectTemplate(template, mount) {\n    if (!mount) {\n      mount = this.el;\n    }\n    if (isString(mount)) {\n      const qs = document.querySelector(mount);\n      //console.log(`Query selector: ${qs}, mount: ${mount}, el: ${this.el}`);\n      if (!qs) {\n        return;\n      }\n      mount = qs;\n    }\n\n    if (isString(template)) {\n      //console.log(`template: ${template}`);\n      // html\n      const currentHTML = mount.innerHTML;\n      mount.innerHTML = `${currentHTML}${template}`;\n    } else if ((template.nodeType && template.nodeName) && (template.nodeType > 0) && !((template.nodeName === \"template\") || (template.nodeName === \"TEMPLATE\"))) {\n      // DOM\n      mount.appendChild(template);\n    } else if (template instanceof DocumentFragment  || (template.nodeName === \"template\") || (template.nodeName === \"TEMPLATE\")) {\n      // Document Fragment\n      Dom.injectTemplate(template, mount);\n    }\n    this.delegateEvents();\n  };\n  /**\n   * removeTemplate method - Removes a template (children) at a mount point\n   * @param {Element} mount The mount point as Document.Element or String\n   * @param {boolean} onlyContent Only remove the content not the mount point\n   */\n  removeTemplate(mount, onlyContent) {\n    if (mount) {\n      let el;\n      if (isString(mount)) {\n        el = Dom.selector(mount);\n      } else {\n        el = mount;\n      }\n      if (el) {\n        while (el.firstChild) {\n          el.removeChild(el.firstChild);\n        }\n        if (!onlyContent) {\n          const p = el.parentNode;\n          if (p) {\n            p.removeChild(el);\n          }\n        }\n        this.delegateEvents();\n      } else {\n        console.warn(`template not removed from ${mount}`);\n      }\n    }\n  };\n  /**\n   * boundElement method - returns the bound element from identifier\n   * @param {string} id The identifier (not id attribute) of the element\n   * @example\n   * from HTML: <div data-myMountedView=\"something\" id=\"anything\"></div>\n   * from JavaScript: let el = this.boundElement(\"something\");\n   */\n  boundElement(id) {\n    if (this.el && id) {\n      let el = this.el;\n      if (isString(this.el)) {\n        el = document.querySelector(this.el);\n      }\n      if (el) {\n        return el.querySelector(\"[\" + this.bindingAttribute() + \"=\" + id + \"]\");\n      }\n    }\n    return null;\n  };\n  /**\n   * syncBoundElement - Syncs the data of a bound element by firing a change event\n   * @param {string} id The identifier (not id attribute) of the element\n   */\n  syncBoundElement(id) {\n    if (id) {\n      let event = new UIEvent(\"change\", {\n        \"view\": window,\n        \"bubbles\": true,\n        \"cancelable\": true\n      }), sel = this.boundElement(id);\n      if (sel) {\n        sel.dispatchEvent(event);\n      }\n    }\n  };\n  /**\n   * syncAllBoundElements - Syncs the data of all bound elements by firing a change events\n   */\n  syncAllBoundElements() {\n    const ba = this.bindingAttribute();\n    if (this.el && ba) {\n      const elements = document.querySelectorAll(`${this.el}[${ba}]`);\n      //console.debug(`Elements ${elements}`);\n      if (elements && elements.length > 0) {\n        let i = 0, l = elements.length, event = new UIEvent(\"change\", {\n          \"view\": window,\n          \"bubbles\": true,\n          \"cancelable\": true\n        });\n        for (i = 0; i < l; i++) {\n          elements[i].dispatchEvent(event);\n        }\n      }\n    } /*else {\n      console.warn(`No bound element ${this.el} or binding attribute - ${ba}`);\n    }*/\n  };\n  /**\n   * addClass - adds a class to a bount element\n   * @param {string} id The identifier (not id attribute) of the element\n   * @param {string} cls The class to add\n   */\n  addClass(id, cls) {\n    const myEl = this.boundElement(id);\n    if (myEl) {\n      myEl.classList.add(cls);\n    }\n  };\n  /**\n   * removeClass - remove a class to a bount element\n   * @param {string} id The identifier (not id attribute) of the element\n   * @param {string} cls The class to remove\n   */\n  removeClass(id, cls) {\n    const myEl = this.boundElement(id);\n    if (myEl) {\n      myEl.classList.remove(cls);\n    }\n  };\n  /**\n   * bindModelChange method - binds the model changes to functions\n   * @param {func} func The function to call when changing (normally render)\n   */\n  bindModelChange(func) {\n    if (!this.model) {\n      this.model = new Model();\n    }\n    this.model.on('change', func, this);\n  };\n  /**\n   * syncModelChange method - binds the model changes to a specified bound element\n   * @param {Element} element The element to bind as Document.Element or string\n   */\n  syncModelChange(element) {\n    if (!this.model) {\n      this.model = new Model();\n    }\n    if (element) {\n      this.model.on('change:' + element, this._syncData.bind(this, element), this);\n    } else {\n      this.model.on('change', this._syncAllData.bind(this, element), this);\n    }\n  };\n  /**\n   * _syncData method - syncs the model changes to a specified bound element\n   * @param {Element} element The element to bind as Document.Element or string\n   * @private\n   */\n  _syncData(element) {\n    let e = this.boundElement(element);\n    if (e) {\n      let d = this.model.get(element),\n      renderStyle = e.getAttribute(DECORATOR_ATTRIBUTE_ENUM.STYLE),\n      prependTemplate = e.getAttribute(DECORATOR_ATTRIBUTE_ENUM.PREPEND_TEMPLATE),\n      appendTemplate = e.getAttribute(DECORATOR_ATTRIBUTE_ENUM.APPEND_TEMPLATE),\n      mount, template;\n\n      if (prependTemplate) {\n        mount = document.createElement(\"div\");\n        template = Dom.selector(\"#\" + prependTemplate);\n        e.appendChild(mount);\n        this.injectTemplate(template, mount);\n      }\n\n      if (renderStyle) {\n        let ee;\n        /*,\n        prependTemplateEach = e.getAttribute(DECORATOR_ATTRIBUTE_ENUM.PREPEND_TEMPLATEEach),\n        appendTemplateEach = e.getAttribute(DECORATOR_ATTRIBUTE_ENUM.APPEND_TEMPLATEEach),\n        pEach = prependTemplateEach ? prependTemplateEach : null,\n        aEach = appendTemplateEach ? appendTemplateEach : null;*/\n\n        if (renderStyle === \"list\" || renderStyle === \"unordered-list\") {\n          ee = Presentation.Widget.List(null, d, false);\n          Dom.empty(e);\n          e.appendChild(ee);\n        } else if (renderStyle === \"ordered-list\") {\n          ee = Presentation.Widget.List(null, d, true);\n          Dom.empty(e);\n          e.appendChild(ee);\n        } else if (renderStyle === \"description-list\") {\n          ee = Presentation.Widget.DescriptionList(null, d);\n          Dom.empty(e);\n          e.appendChild(ee);\n        }\n      } else {\n        Dom.setValue(e, ((d) ? d : \"\"));\n      }\n\n      if (appendTemplate) {\n        mount = document.createElement(\"div\");\n        template = Dom.selector(\"#\" + appendTemplate);\n        e.appendChild(mount);\n\n        this.injectTemplate(template, mount);\n      }\n    }\n  };\n  _syncAllData() {\n    // get all model properties\n    const attr = this.model.attributes;\n    if (attr) {\n      let i = 0;\n      const keys = Object.keys(attr), l = keys.length;\n      for (i = 0; i < l; i++) {\n        this._syncData(keys[i]);\n      }\n    }\n  };\n  /**\n   * unbindModelChange method - unbinds the model changes to elements\n   * @param {func} func The function to call when changing (normally render)\n   */\n  unbindModelChange(func) {\n    this.model.unBind('change', func, this);\n  };\n  /**\n   * unbindModelSync method - unbinds the model changes to a specified bound element\n   * @param {Element} element The element to bind as Document.Element or string\n   */\n  unbindModelSync(element) {\n    this.model.unBind('change:' + element, this._syncData, this);\n  }\n};\n\nexport default DecoratorView;\n","import DirectiveView from \"./directive.js\";\nimport DecoratorView from \"./decorator.js\";\n\nmodule.exports.DecoratorView = DecoratorView;\nmodule.exports.DirectiveView = DirectiveView;\n","import DecoratorView from \"./decorator.js\";\n\n/**\n * A DecoratorView that is designed to use templates and clean up when removed.\n * @see Presentation.DecoratorView\n * @memberof Presentation\n * @extends Presentation.DecoratorView\n */\nclass DirectiveView extends DecoratorView {\n  constructor(options) {\n    super(options);\n  };\n\n  render() {\n    //console.debug(\"DirectiveView render\");\n    return super.render();\n  };\n\n  remove() {\n    //console.debug(\"DirectiveView remove\", this.name);\n    this.removeTemplate(this.el, true);\n    return super.remove();\n  };\n};\n\nexport default DirectiveView;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;"],"sourceRoot":""}